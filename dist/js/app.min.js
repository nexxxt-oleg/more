document.addEventListener("DOMContentLoaded", () => {
    if (document.getElementById('themeSwitch')) {
        const themeSwitch = document.getElementById('themeSwitch');
        themeSwitch.addEventListener('change', () => {
            if (themeSwitch.checked) {
                document.body.classList.remove('cinema-white');
            } else {
                document.body.classList.add('cinema-white');
            }
        });
    }
    if (document.getElementById('indexSlider')) {
        const sliderBrands = new Swiper('#indexSlider', {
            spaceBetween: 30,
            loop: true,
            autoplay: {
                delay: 15000,
            },
            effect: 'creative',
            creativeEffect: {
                prev: {
                    // will set `translateZ(-400px)` on previous slides
                    translate: [0, 0, -400],
                },
                next: {
                    // will set `translateX(100%)` on next slides
                    translate: ['100%', 0, 0],
                },
            },

            pagination: {
                el: '#indexSlider .swiper-pagination',
                clickable: true,
            },

            on: {
                slideChange: function (e) {
                    e.autoplay.run();
                }
            }
        });
    }
    if (document.getElementById('actionSlider')) {
        const sliderBrands = new Swiper('#actionSlider', {
            spaceBetween: 30,
            slidesPerView: 3,
            slidesPerGroup: 1,
            navigation: {
                nextEl: '#actionSliderNext',
                prevEl: '#actionSliderPrev',
            },

            breakpoints: {
                300: {
                    slidesPerView: 1,
                    spaceBetween: 15
                },
                600: {
                    slidesPerView: 2,
                    spaceBetween: 20
                },
                991: {
                    slidesPerView: 3,
                    spaceBetween: 20
                },
                1200: {
                    slidesPerView: 3,
                    spaceBetween: 30
                },
            },

        });
    }
    if (document.getElementById('newsSlider')) {
        const sliderBrands = new Swiper('#newsSlider', {
            spaceBetween: 30,
            slidesPerView: 3,
            slidesPerGroup: 1,
            navigation: {
                nextEl: '#newsSliderNext',
                prevEl: '#newsSliderPrev',
            },

            breakpoints: {
                300: {
                    slidesPerView: 1,
                    spaceBetween: 15
                },
                600: {
                    slidesPerView: 2,
                    spaceBetween: 20
                },
                991: {
                    slidesPerView: 3,
                    spaceBetween: 20
                },
                1200: {
                    slidesPerView: 3,
                    spaceBetween: 30
                },
            },

        });
    }

    if (document.getElementById('datepicker')) {
        new AirDatepicker('#datepicker', {
            isMobile: true,
            autoClose: true,
            dateFormat: 'dd MMMM yyyy',
            onShow(isFinished) {
                if (!isFinished) {
                    document.getElementById('dateCustom').checked = true;
                }
            }
        });
    }

    var lazyLoadInstance = new LazyLoad({
        elements_selector: ".lazy"
        // ... more custom settings?
    });

    const widthScreen = window.innerWidth || document.documentElement.clientWidth ||
        document.body.clientWidth;

    if (widthScreen > 768) {
        window.addEventListener('scroll', onWindowScroll)
        onWindowScroll();
    }

    function onWindowScroll() {
        if (window.document.scrollingElement.scrollTop > 150) {
            document.body.classList.add("fixed-menu");
        } else {
            document.body.classList.remove("fixed-menu");
        }
    }

    const selectCustom = document.querySelectorAll('.js-select');

    selectCustom.forEach(el => {
        new Choices(el, {
            searchEnabled: false,
            removeItemButton: false,
        });
    });

    const dataPick = document.querySelectorAll('.js-date');

    dataPick.forEach(el => {
        new AirDatepicker(el, {
            isMobile: true,
            autoClose: true,
            dateFormat: 'dd.MM.yyyy',
        });
    });

    const maskPhone = document.querySelectorAll('.js-mask-phone');
    maskPhone.forEach(el => {
        let im = new Inputmask("+7 (999) 999-99-99", {"clearIncomplete": true});
        im.mask(el);
    });


    if (document.getElementById('field__file-2')) {
        let input = document.getElementById('field__file-2');
        input.addEventListener('change', function (e) {
            if (this.files && this.files.length >= 1) {
                document.getElementById('field__file-2__value').innerHTML = this.files[0].name;
            }

        });
    }


    if (document.getElementById('formPhoneAuth')) {
        const formPhoneAuth = new JustValidate('#formPhoneAuth', {
                errorFieldCssClass: 'is-invalid',
                successFieldCssClass: 'is-valid',
                validateBeforeSubmitting: true,
            }
        );
        formPhoneAuth
            .addField('#phoneAuth', [
                {
                    rule: 'required',
                    errorMessage: 'Введите телефон',
                },
            ])
            .onSuccess((event) => {
                let formData = new FormData(event.target);
                console.log(...formData);
                event.target.reset();
            });

        document.getElementById("phoneAuth").addEventListener('input', (event) => {
            if (event.target.value.length > 0) {
                document.getElementById('formPhoneAuth').querySelector('button[type="submit"]').classList.remove('disabled');
            }
        });
    }

    if (document.getElementById('formEmailAuth')) {
        const formEmailAuth = new JustValidate('#formEmailAuth', {
                errorFieldCssClass: 'is-invalid',
                successFieldCssClass: 'is-valid',
                validateBeforeSubmitting: true,
            }
        );
        formEmailAuth
            .addField('#emailAuth', [
                {
                    rule: 'required',
                    errorMessage: 'Введите email',
                },
                {
                    rule: 'email',
                    errorMessage: 'Введите email',
                },
            ])
            .addField('#passAuth', [
                {
                    rule: 'required',
                    errorMessage: 'Введите пароль',
                },
            ])
            .onSuccess((event) => {
                //document.getElementById("formPhoneAuth").submit();
            });

        document.getElementById("emailAuth").addEventListener('input', (event) => {
            if (event.target.value.length > 0 && document.getElementById("passAuth").value.length > 0) {
                document.getElementById('formEmailAuth').querySelector('button[type="submit"]').classList.remove('disabled');
            }
        });
        document.getElementById("passAuth").addEventListener('input', (event) => {
            if (event.target.value.length > 0 && document.getElementById("emailAuth").value.length > 0) {
                document.getElementById('formEmailAuth').querySelector('button[type="submit"]').classList.remove('disabled');
            }
        });
    }


    const jsPass = document.querySelectorAll('.js-pass');

    jsPass.forEach(el => {
        el.addEventListener('click', (event) => {
            if (document.getElementById(el.dataset.target)) {
                let inputPass = document.getElementById(el.dataset.target);
                if (inputPass.type === 'password') {
                    inputPass.type = 'text';
                    el.classList.add('active');
                } else {
                    inputPass.type = 'password';
                    el.classList.remove('active');
                }
            }
        });
    });

    if (document.getElementById('phoneCodeAuth')) {
        let phoneCodeAuth = new Inputmask("9 9 9 9", {"clearIncomplete": true});
        phoneCodeAuth.mask(document.getElementById('phoneCodeAuth'));

        const formPhoneCodeAuth = new JustValidate('#formPhoneCodeAuth', {
                errorFieldCssClass: 'is-invalid',
                successFieldCssClass: 'is-valid',
                validateBeforeSubmitting: true,
            }
        );
        formPhoneCodeAuth
            .addField('#phoneCodeAuth', [
                {
                    rule: 'required',
                    errorMessage: 'Введите код',
                },
                {
                    validator: (value) => {
                        if (value != '') {
                            if (value.replace(/ /g, '').replace(/_/g, '').length === 4)
                                return true;
                        }
                        return false;
                    },
                    errorMessage: '4',
                }
            ])
            .onValidate((event) => {
                if(event.isValid) {
                    document.getElementById('formPhoneCodeAuth').querySelector('button[type="submit"]').classList.remove('disabled');
                }
            });
    }

});
